package selpw;import com.microsoft.playwright.Locator;import com.microsoft.playwright.Page;import com.microsoft.playwright.options.AriaRole;import org.openqa.selenium.By;import org.openqa.selenium.WebElement;import org.testng.Assert;import org.testng.annotations.Test;import runner.BaseTest;import java.util.ArrayList;import java.util.List;public class VerifyDescendingSortByPriceSeleniumTest extends BaseTest{    /* Test Objective:To verify that products are displayed in descending order of pricewhen the 'Sort By' option is set to descending order.Test Data:Sample products with various prices.Test Environment:Catalog page of the application.Selenium - Chrome DriverPlaywright - Chromium DriverPreconditions:The user is on the catalog Men > Tops page as a guest.Test Steps:Open the 'Sort By' dropdown menu.Select the 'Price' option from the dropdown menu.Choose the descending order option (arrow down).Collect the displayed prices of the products.Expected Result:The products should be displayed in descending order of price.The first product displayed should have the highest price,and subsequent products should follow in descending order. */        private void openMenTopsPage() {//        getDriver().get("https://magento.softwaretestingboard.com");//        getDriver().manage().window().maximize();////        getDriver().findElement(By.cssSelector(".fc-primary-button > p")).click();        openBaseUrlSelenium();        getDriver().findElement( By.linkText("Men")).click();        getDriver().findElement(By.linkText("Tops")).click();                // Switching to Alert        //Alert alert = getDriver().switchTo().alert();                // Accepting alert       // alert.dismiss();        //alert.sendKeys("Welcome");       // alert.dismiss();                // Capturing alert message.        //String alertMessage= getDriver().switchTo().alert().getText();               // getDriver().switchTo().alert().sendKeys("Welcome");               // getDriver().findElement(By.cssSelector("fc-primary-button > p")).click();        //getDriver().switchTo().frame("fc-dialog-content");                //Launching the site.        //  getDriver().manage().window().maximize();        //  getDriver().findElement(By.xpath("//*[contains(@href,'popup.php')]")).click()    }        private double getMax(List<Double> list) {        double max = Double.MIN_VALUE;        for(Double number : list) {            max = Math.max(max, number);        }                return max;    }        private boolean isDescending(List<Double> list) {        Double previousNumber = list.get(0);                for(Double number : list) {            if (number > previousNumber) {                                return false;            } else {                previousNumber = number;            }        }                return true;    }        @Test    public void testDescendingSortByPriceSelenium() {//        getDriver().get("https://magento.softwaretestingboard.com");//        getDriver().manage().window().maximize();////        getDriver().findElement(By.cssSelector(".fc-primary-button > p")).click();//        getDriver().findElement( By.linkText("Men")).click();//        getDriver().findElement(By.linkText("Tops")).click();       // Thread.sleep(3000);        openMenTopsPage();        getDriver().findElement(By.id("sorter")).click();        getDriver().findElement(By.xpath("//option[@value='price']")).click();        getDriver().findElement(By.linkText("Set Descending Direction")).click();                List<WebElement> productsElements = getDriver()                .findElements(                By.xpath("//li[@class='item product product-item']"));  // 12        List<WebElement> pricesElements = getDriver()                .findElements(                By.xpath("//li[@class='item product product-item']//span[@class='price']") // 12        );                List<Double> prices = new ArrayList<>();        for(WebElement price : pricesElements) {            prices.add(                    Double.parseDouble(                            price.getText().substring(1)                    )            );        }                Assert.assertTrue(prices.size() > 1,                "There are NOT enough products for price comparison.");        Assert.assertEquals(prices.size(), productsElements.size());                Assert.assertTrue(                prices.get(0) >= prices.get(prices.size() - 1),                "The products are NOT displayed in descending order of price."        );        Assert.assertFalse(                prices.get(0) < prices.get(prices.size() - 1),                "The price of the first product is LOWER than the price of the last product."        );                double maxPrice = getMax(prices);        Double firstCardPrice = Double.parseDouble(pricesElements.get(0).getText().substring(1));                Assert.assertEquals(maxPrice, firstCardPrice);                boolean actualIsDescendingPriceSort = isDescending(prices);                Assert.assertTrue(                actualIsDescendingPriceSort,                "The subsequent products are NOT arranged in descending order."        );    }}